                                   initialize
instruction = 32'h00000000, regA = 32'h00000000, regB = 32'h00000000, result = 32'h00000000, flags = 3'b10x

                                   for R Type

                                   format is

                      instruction:regA:regB:result:flags

                                add overflow test
instruction = 32'h00200020, regA = 32'h7fffffff, regB = 32'h00000006, result = 32'h80000005, flags = 3'b011

                                add normal test
instruction = 32'h00010020, regA = 32'h00000001, regB = 32'h00000002, result = 32'h00000003, flags = 3'b000

                                sub overflow test
instruction = 32'h00010022, regA = 32'h7fffffff, regB = 32'hffffffff, result = 32'h80000000, flags = 3'b011

                                sub normal test
instruction = 32'h00010022, regA = 32'h00000004, regB = 32'h00000003, result = 32'h00000001, flags = 3'b000

                                  addu test
instruction = 32'h00200021, regA = 32'h7fffffff, regB = 32'h00000006, result = 32'h80000005, flags = 3'b010

                                  subu test
instruction = 32'h00010023, regA = 32'h7fffffff, regB = 32'hffffffff, result = 32'h80000000, flags = 3'b010

                                  and test
instruction = 32'h00010024, regA = 32'hffffffff, regB = 32'h00000001, result = 32'h00000001, flags = 3'b000

                                   or test
instruction = 32'h00200025, regA = 32'h00000000, regB = 32'h00000001, result = 32'h00000001, flags = 3'b000

                                  xor test
instruction = 32'h00200026, regA = 32'hffffffff, regB = 32'h0000000f, result = 32'hfffffff0, flags = 3'b010

                                  nor test
instruction = 32'h00200027, regA = 32'h00000000, regB = 32'hffffffff, result = 32'h00000000, flags = 3'b100

                             slt test(negative)
instruction = 32'h0001002a, regA = 32'h00000000, regB = 32'h00000001, result = 32'hffffffff, flags = 3'b010

                          slt test(non-negative)
instruction = 32'h0001002a, regA = 32'h00000001, regB = 32'h00000000, result = 32'h00000001, flags = 3'b000

                           sltu test(negative)
instruction = 32'h0001002b, regA = 32'h00000000, regB = 32'hffffffff, result = 32'h00000001, flags = 3'b000

                                sltu test
instruction = 32'h0001002b, regA = 32'hffffffff, regB = 32'hfffffffe, result = 32'h00000001, flags = 3'b000

                                sll test
instruction = 32'h00010280, regA = 32'h00000000, regB = 32'h00000001, result = 32'h00000400, flags = 3'b000

                                srl test
instruction = 32'h00010282, regA = 32'h00000000, regB = 32'hf0000000, result = 32'h003c0000, flags = 3'b000

                                sllv test
instruction = 32'h00010004, regA = 32'h00000010, regB = 32'h00000001, result = 32'h00010000, flags = 3'b000

                                srlv test
instruction = 32'h00010006, regA = 32'h00000004, regB = 32'h00000100, result = 32'h00000010, flags = 3'b000

                                srav test
instruction = 32'h00010007, regA = 32'h00000001, regB = 32'h00000100, result = 32'h00000080, flags = 3'b000

                                sra test
instruction = 32'h00010083, regA = 32'h00000000, regB = 32'h10000000, result = 32'h04000000, flags = 3'b000

                                         for I Type

                                         format is

                        instruction:regA:regB:immediate:result:flags

                                         addi test
instruction = 32'h20200001, regA = 32'h00000001, regB = 32'h00000000, immediate = 16'b0000000000000001, result = 32'h00000001, flags = 3'b000

                                     addi test(overflow)
instruction = 32'h20200001, regA = 32'h7fffffff, regB = 32'h00000000, immediate = 16'b0000000000000001, result = 32'h00000001, flags = 3'b000

                                        andi test
instruction = 32'h30010001, regA = 32'hffffffff, regB = 32'h00000000, immediate = 16'b0000000000000001, result = 32'h00000001, flags = 3'b000

                                        addiu test
instruction = 32'h22018001, regA = 32'h00000001, regB = 32'h00000000, immediate = 16'b1000000000000001, result = 32'hffff8000, flags = 3'b010

                                         ori test
instruction = 32'h32010001, regA = 32'h00000010, regB = 32'h00000000, immediate = 16'b0000000000000001, result = 32'h00000001, flags = 3'b000

                                        xori test
instruction = 32'h38010001, regA = 32'h00000001, regB = 32'h00000000, immediate = 16'b0000000000000001, result = 32'h00000000, flags = 3'b100

                                   slti test(negative)
instruction = 32'h28010001, regA = 32'h00000000, regB = 32'h00000000, immediate = 16'b0000000000000001, result = 32'hffffffff, flags = 3'b010

                                        slti test
instruction = 32'h28010000, regA = 32'h00000001, regB = 32'h00000000, immediate = 16'b0000000000000000, result = 32'h00000001, flags = 3'b000

                                     beq test(zero)
instruction = 32'h10010001, regA = 32'h00000001, regB = 32'h00000001, immediate = 16'b0000000000000001, result = 32'h00000000, flags = 3'b100

                                   beq test(non-zero)
instruction = 32'h10010001, regA = 32'h00000000, regB = 32'h00000001, immediate = 16'b0000000000000001, result = 32'hffffffff, flags = 3'b010

                                   bne test(non-zero)
instruction = 32'h14010001, regA = 32'h00000001, regB = 32'h00000000, immediate = 16'b0000000000000001, result = 32'h00000001, flags = 3'b000

                                     bne test(zero)
instruction = 32'h14010001, regA = 32'h00000001, regB = 32'h00000001, immediate = 16'b0000000000000001, result = 32'h00000000, flags = 3'b100

                                  sltiu test(negative)
instruction = 32'h2c010010, regA = 32'h00000001, regB = 32'h00000000, immediate = 16'b0000000000010000, result = 32'hfffffff1, flags = 3'b010

                                sltiu test(non-negative)
instruction = 32'h2c010010, regA = 32'h00000100, regB = 32'h00000000, immediate = 16'b0000000000010000, result = 32'h000000f0, flags = 3'b000

                                        lw test
instruction = 32'h8c01700f, regA = 32'h00000100, regB = 32'h00000000, immediate = 16'b0111000000001111, result = 32'h0000710f, flags = 3'b000

                                        sw test
instruction = 32'hac01700f, regA = 32'h00000100, regB = 32'h00000000, immediate = 16'b0111000000001111, result = 32'h0000710f, flags = 3'b000
test_ALU.v:209: $stop called at 4100000 (1ps)
** VVP Stop(0) **
** Flushing output streams.
** Current simulation time is 4100000 ticks.
> finish
